import org.ajoberstar.grgit.Grgit

import java.time.Instant
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1'
        classpath 'org.ajoberstar:gradle-git:1.2.0'
    }
}

plugins {
    id 'net.researchgate.release' version '2.1.2'
    id 'co.riiid.gradle' version "0.4.2"
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'

group = 'net.zomis'

description = "Brainfuck Java interpreter and utility"

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'net.zomis.brainf.ui.Brainduck'



repositories {
        
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile 'com.beust:jcommander:1.30'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.6.10'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version:'2.4.4'
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.loadui', name: 'testFx', version:'3.1.2'
}


task dist << {
}
dist.dependsOn 'shadowJar'
dist.dependsOn 'test'

task fixVersion << {
    def dir = new File(buildDir, 'resources/main')
    dir.mkdirs()

    def repo = Grgit.open()
    def date = DateTimeFormatter.ISO_INSTANT.format(Instant.now())
    def branchName = repo.branch.getCurrent().getName()
    def commitHash = repo.log(maxCommits: 1)[0].id
    def version = project.version
    def fileContents = new StringBuilder()
    fileContents.append "version=$version\n"
    fileContents.append "branch=$branchName\n"
    fileContents.append "commit=$commitHash\n"
    fileContents.append "date=$date\n"

    new File(dir, 'version.dat').text = fileContents.toString()
}
processResources.dependsOn 'fixVersion'

github {
    owner = 'Zomis'
    repo = 'Brainduck'
    def tokenFile = file('github.token')
    String lastTag = Grgit.open().tag.list().last().fullName
    lastTag = lastTag.substring(lastTag.lastIndexOf('/') + 1)
    token = tokenFile.exists() ? tokenFile.text.trim() : tokenFile.absolutePath + ' missing'
    tagName = lastTag
    targetCommitish = 'master'
    name = lastTag
//    body = '# Brainduck\n\nRelease notes and stuff'
    assets = [
        'build/libs/' + project.name + '-' + project.version + '-all.jar'
    ]
    draft = false
    prerelease = false
}
// githubRelease.dependsOn release
